/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 class Solution{
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode>queue=new LinkedList<>();
        List<List<Integer>>l1=new ArrayList<>();
         if(root==null){
         return l1;
     }
        queue.offer(root);
        while(!queue.isEmpty()){
        int size=queue.size();
        List<Integer> l = new ArrayList<>();
        for(int i=0;i<size;i++){
        TreeNode t=queue.poll();
        l.add(t.val);
        if(t.left !=null){
        queue.offer(t.left);
        }
          if(t.right !=null){
        queue.offer(t.right);
        }}
        l1.add(l);
        }
    return l1;
    }
    }
